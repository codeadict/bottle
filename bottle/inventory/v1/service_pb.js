// source: bottle/inventory/v1/service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var bottle_inventory_v1_component_pb = require('../../../bottle/inventory/v1/component_pb.js');
goog.object.extend(proto, bottle_inventory_v1_component_pb);
var bottle_inventory_v1_location_pb = require('../../../bottle/inventory/v1/location_pb.js');
goog.object.extend(proto, bottle_inventory_v1_location_pb);
var bottle_inventory_v1_sku_pb = require('../../../bottle/inventory/v1/sku_pb.js');
goog.object.extend(proto, bottle_inventory_v1_sku_pb);
goog.exportSymbol('proto.bottle.inventory.v1.ListComponentAvailabilityRequest', null, global);
goog.exportSymbol('proto.bottle.inventory.v1.ListComponentAvailabilityResponse', null, global);
goog.exportSymbol('proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption', null, global);
goog.exportSymbol('proto.bottle.inventory.v1.ListLocationsRequest', null, global);
goog.exportSymbol('proto.bottle.inventory.v1.ListLocationsResponse', null, global);
goog.exportSymbol('proto.bottle.inventory.v1.ListSkuAvailabilityRequest', null, global);
goog.exportSymbol('proto.bottle.inventory.v1.ListSkuAvailabilityResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bottle.inventory.v1.ListComponentAvailabilityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bottle.inventory.v1.ListComponentAvailabilityRequest.repeatedFields_, null);
};
goog.inherits(proto.bottle.inventory.v1.ListComponentAvailabilityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bottle.inventory.v1.ListComponentAvailabilityRequest.displayName = 'proto.bottle.inventory.v1.ListComponentAvailabilityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bottle.inventory.v1.ListComponentAvailabilityResponse.repeatedFields_, null);
};
goog.inherits(proto.bottle.inventory.v1.ListComponentAvailabilityResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bottle.inventory.v1.ListComponentAvailabilityResponse.displayName = 'proto.bottle.inventory.v1.ListComponentAvailabilityResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.displayName = 'proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bottle.inventory.v1.ListSkuAvailabilityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bottle.inventory.v1.ListSkuAvailabilityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bottle.inventory.v1.ListSkuAvailabilityRequest.displayName = 'proto.bottle.inventory.v1.ListSkuAvailabilityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bottle.inventory.v1.ListSkuAvailabilityResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bottle.inventory.v1.ListSkuAvailabilityResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bottle.inventory.v1.ListSkuAvailabilityResponse.displayName = 'proto.bottle.inventory.v1.ListSkuAvailabilityResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bottle.inventory.v1.ListLocationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bottle.inventory.v1.ListLocationsRequest.repeatedFields_, null);
};
goog.inherits(proto.bottle.inventory.v1.ListLocationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bottle.inventory.v1.ListLocationsRequest.displayName = 'proto.bottle.inventory.v1.ListLocationsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bottle.inventory.v1.ListLocationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bottle.inventory.v1.ListLocationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bottle.inventory.v1.ListLocationsResponse.displayName = 'proto.bottle.inventory.v1.ListLocationsResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bottle.inventory.v1.ListComponentAvailabilityRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bottle.inventory.v1.ListComponentAvailabilityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bottle.inventory.v1.ListComponentAvailabilityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.inventory.v1.ListComponentAvailabilityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    componentsList: jspb.Message.toObjectList(msg.getComponentsList(),
    bottle_inventory_v1_component_pb.Component.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityRequest}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bottle.inventory.v1.ListComponentAvailabilityRequest;
  return proto.bottle.inventory.v1.ListComponentAvailabilityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bottle.inventory.v1.ListComponentAvailabilityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityRequest}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new bottle_inventory_v1_component_pb.Component;
      reader.readMessage(value,bottle_inventory_v1_component_pb.Component.deserializeBinaryFromReader);
      msg.addComponents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bottle.inventory.v1.ListComponentAvailabilityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bottle.inventory.v1.ListComponentAvailabilityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.inventory.v1.ListComponentAvailabilityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getComponentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      bottle_inventory_v1_component_pb.Component.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityRequest} returns this
 */
proto.bottle.inventory.v1.ListComponentAvailabilityRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Component components = 2;
 * @return {!Array<!proto.bottle.inventory.v1.Component>}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityRequest.prototype.getComponentsList = function() {
  return /** @type{!Array<!proto.bottle.inventory.v1.Component>} */ (
    jspb.Message.getRepeatedWrapperField(this, bottle_inventory_v1_component_pb.Component, 2));
};


/**
 * @param {!Array<!proto.bottle.inventory.v1.Component>} value
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityRequest} returns this
*/
proto.bottle.inventory.v1.ListComponentAvailabilityRequest.prototype.setComponentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.bottle.inventory.v1.Component=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bottle.inventory.v1.Component}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityRequest.prototype.addComponents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.bottle.inventory.v1.Component, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityRequest} returns this
 */
proto.bottle.inventory.v1.ListComponentAvailabilityRequest.prototype.clearComponentsList = function() {
  return this.setComponentsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bottle.inventory.v1.ListComponentAvailabilityResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    component: (f = msg.getComponent()) && bottle_inventory_v1_component_pb.Component.toObject(includeInstance, f),
    totalAvailableQuantity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pickingOptionsList: jspb.Message.toObjectList(msg.getPickingOptionsList(),
    proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bottle.inventory.v1.ListComponentAvailabilityResponse;
  return proto.bottle.inventory.v1.ListComponentAvailabilityResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new bottle_inventory_v1_component_pb.Component;
      reader.readMessage(value,bottle_inventory_v1_component_pb.Component.deserializeBinaryFromReader);
      msg.setComponent(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalAvailableQuantity(value);
      break;
    case 4:
      var value = new proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption;
      reader.readMessage(value,proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.deserializeBinaryFromReader);
      msg.addPickingOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bottle.inventory.v1.ListComponentAvailabilityResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getComponent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bottle_inventory_v1_component_pb.Component.serializeBinaryToWriter
    );
  }
  f = message.getTotalAvailableQuantity();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPickingOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.prototype.toObject = function(opt_includeInstance) {
  return proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.toObject = function(includeInstance, msg) {
  var f, obj = {
    sku: (f = msg.getSku()) && bottle_inventory_v1_sku_pb.Sku.toObject(includeInstance, f),
    recommendedLocation: (f = msg.getRecommendedLocation()) && bottle_inventory_v1_location_pb.Location.toObject(includeInstance, f),
    requiredQuantityPerKit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    availableQuantity: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption;
  return proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bottle_inventory_v1_sku_pb.Sku;
      reader.readMessage(value,bottle_inventory_v1_sku_pb.Sku.deserializeBinaryFromReader);
      msg.setSku(value);
      break;
    case 2:
      var value = new bottle_inventory_v1_location_pb.Location;
      reader.readMessage(value,bottle_inventory_v1_location_pb.Location.deserializeBinaryFromReader);
      msg.setRecommendedLocation(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRequiredQuantityPerKit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAvailableQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSku();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bottle_inventory_v1_sku_pb.Sku.serializeBinaryToWriter
    );
  }
  f = message.getRecommendedLocation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bottle_inventory_v1_location_pb.Location.serializeBinaryToWriter
    );
  }
  f = message.getRequiredQuantityPerKit();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getAvailableQuantity();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional Sku sku = 1;
 * @return {?proto.bottle.inventory.v1.Sku}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.prototype.getSku = function() {
  return /** @type{?proto.bottle.inventory.v1.Sku} */ (
    jspb.Message.getWrapperField(this, bottle_inventory_v1_sku_pb.Sku, 1));
};


/**
 * @param {?proto.bottle.inventory.v1.Sku|undefined} value
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption} returns this
*/
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.prototype.setSku = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption} returns this
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.prototype.clearSku = function() {
  return this.setSku(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.prototype.hasSku = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Location recommended_location = 2;
 * @return {?proto.bottle.inventory.v1.Location}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.prototype.getRecommendedLocation = function() {
  return /** @type{?proto.bottle.inventory.v1.Location} */ (
    jspb.Message.getWrapperField(this, bottle_inventory_v1_location_pb.Location, 2));
};


/**
 * @param {?proto.bottle.inventory.v1.Location|undefined} value
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption} returns this
*/
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.prototype.setRecommendedLocation = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption} returns this
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.prototype.clearRecommendedLocation = function() {
  return this.setRecommendedLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.prototype.hasRecommendedLocation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 required_quantity_per_kit = 3;
 * @return {number}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.prototype.getRequiredQuantityPerKit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption} returns this
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.prototype.setRequiredQuantityPerKit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 available_quantity = 4;
 * @return {number}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.prototype.getAvailableQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption} returns this
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption.prototype.setAvailableQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse} returns this
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Component component = 2;
 * @return {?proto.bottle.inventory.v1.Component}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.prototype.getComponent = function() {
  return /** @type{?proto.bottle.inventory.v1.Component} */ (
    jspb.Message.getWrapperField(this, bottle_inventory_v1_component_pb.Component, 2));
};


/**
 * @param {?proto.bottle.inventory.v1.Component|undefined} value
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse} returns this
*/
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.prototype.setComponent = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse} returns this
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.prototype.clearComponent = function() {
  return this.setComponent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.prototype.hasComponent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 total_available_quantity = 3;
 * @return {number}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.prototype.getTotalAvailableQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse} returns this
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.prototype.setTotalAvailableQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated PickingOption picking_options = 4;
 * @return {!Array<!proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption>}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.prototype.getPickingOptionsList = function() {
  return /** @type{!Array<!proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption, 4));
};


/**
 * @param {!Array<!proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption>} value
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse} returns this
*/
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.prototype.setPickingOptionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption}
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.prototype.addPickingOptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.bottle.inventory.v1.ListComponentAvailabilityResponse.PickingOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bottle.inventory.v1.ListComponentAvailabilityResponse} returns this
 */
proto.bottle.inventory.v1.ListComponentAvailabilityResponse.prototype.clearPickingOptionsList = function() {
  return this.setPickingOptionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bottle.inventory.v1.ListSkuAvailabilityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bottle.inventory.v1.ListSkuAvailabilityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bottle.inventory.v1.ListSkuAvailabilityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.inventory.v1.ListSkuAvailabilityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sku: (f = msg.getSku()) && bottle_inventory_v1_sku_pb.Sku.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bottle.inventory.v1.ListSkuAvailabilityRequest}
 */
proto.bottle.inventory.v1.ListSkuAvailabilityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bottle.inventory.v1.ListSkuAvailabilityRequest;
  return proto.bottle.inventory.v1.ListSkuAvailabilityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bottle.inventory.v1.ListSkuAvailabilityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bottle.inventory.v1.ListSkuAvailabilityRequest}
 */
proto.bottle.inventory.v1.ListSkuAvailabilityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new bottle_inventory_v1_sku_pb.Sku;
      reader.readMessage(value,bottle_inventory_v1_sku_pb.Sku.deserializeBinaryFromReader);
      msg.setSku(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bottle.inventory.v1.ListSkuAvailabilityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bottle.inventory.v1.ListSkuAvailabilityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bottle.inventory.v1.ListSkuAvailabilityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.inventory.v1.ListSkuAvailabilityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSku();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bottle_inventory_v1_sku_pb.Sku.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.bottle.inventory.v1.ListSkuAvailabilityRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bottle.inventory.v1.ListSkuAvailabilityRequest} returns this
 */
proto.bottle.inventory.v1.ListSkuAvailabilityRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Sku sku = 2;
 * @return {?proto.bottle.inventory.v1.Sku}
 */
proto.bottle.inventory.v1.ListSkuAvailabilityRequest.prototype.getSku = function() {
  return /** @type{?proto.bottle.inventory.v1.Sku} */ (
    jspb.Message.getWrapperField(this, bottle_inventory_v1_sku_pb.Sku, 2));
};


/**
 * @param {?proto.bottle.inventory.v1.Sku|undefined} value
 * @return {!proto.bottle.inventory.v1.ListSkuAvailabilityRequest} returns this
*/
proto.bottle.inventory.v1.ListSkuAvailabilityRequest.prototype.setSku = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bottle.inventory.v1.ListSkuAvailabilityRequest} returns this
 */
proto.bottle.inventory.v1.ListSkuAvailabilityRequest.prototype.clearSku = function() {
  return this.setSku(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bottle.inventory.v1.ListSkuAvailabilityRequest.prototype.hasSku = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bottle.inventory.v1.ListSkuAvailabilityResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bottle.inventory.v1.ListSkuAvailabilityResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bottle.inventory.v1.ListSkuAvailabilityResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.inventory.v1.ListSkuAvailabilityResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sku: (f = msg.getSku()) && bottle_inventory_v1_sku_pb.Sku.toObject(includeInstance, f),
    location: (f = msg.getLocation()) && bottle_inventory_v1_location_pb.Location.toObject(includeInstance, f),
    availableQuantity: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bottle.inventory.v1.ListSkuAvailabilityResponse}
 */
proto.bottle.inventory.v1.ListSkuAvailabilityResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bottle.inventory.v1.ListSkuAvailabilityResponse;
  return proto.bottle.inventory.v1.ListSkuAvailabilityResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bottle.inventory.v1.ListSkuAvailabilityResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bottle.inventory.v1.ListSkuAvailabilityResponse}
 */
proto.bottle.inventory.v1.ListSkuAvailabilityResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new bottle_inventory_v1_sku_pb.Sku;
      reader.readMessage(value,bottle_inventory_v1_sku_pb.Sku.deserializeBinaryFromReader);
      msg.setSku(value);
      break;
    case 3:
      var value = new bottle_inventory_v1_location_pb.Location;
      reader.readMessage(value,bottle_inventory_v1_location_pb.Location.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAvailableQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bottle.inventory.v1.ListSkuAvailabilityResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bottle.inventory.v1.ListSkuAvailabilityResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bottle.inventory.v1.ListSkuAvailabilityResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.inventory.v1.ListSkuAvailabilityResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSku();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bottle_inventory_v1_sku_pb.Sku.serializeBinaryToWriter
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      bottle_inventory_v1_location_pb.Location.serializeBinaryToWriter
    );
  }
  f = message.getAvailableQuantity();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.bottle.inventory.v1.ListSkuAvailabilityResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bottle.inventory.v1.ListSkuAvailabilityResponse} returns this
 */
proto.bottle.inventory.v1.ListSkuAvailabilityResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Sku sku = 2;
 * @return {?proto.bottle.inventory.v1.Sku}
 */
proto.bottle.inventory.v1.ListSkuAvailabilityResponse.prototype.getSku = function() {
  return /** @type{?proto.bottle.inventory.v1.Sku} */ (
    jspb.Message.getWrapperField(this, bottle_inventory_v1_sku_pb.Sku, 2));
};


/**
 * @param {?proto.bottle.inventory.v1.Sku|undefined} value
 * @return {!proto.bottle.inventory.v1.ListSkuAvailabilityResponse} returns this
*/
proto.bottle.inventory.v1.ListSkuAvailabilityResponse.prototype.setSku = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bottle.inventory.v1.ListSkuAvailabilityResponse} returns this
 */
proto.bottle.inventory.v1.ListSkuAvailabilityResponse.prototype.clearSku = function() {
  return this.setSku(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bottle.inventory.v1.ListSkuAvailabilityResponse.prototype.hasSku = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Location location = 3;
 * @return {?proto.bottle.inventory.v1.Location}
 */
proto.bottle.inventory.v1.ListSkuAvailabilityResponse.prototype.getLocation = function() {
  return /** @type{?proto.bottle.inventory.v1.Location} */ (
    jspb.Message.getWrapperField(this, bottle_inventory_v1_location_pb.Location, 3));
};


/**
 * @param {?proto.bottle.inventory.v1.Location|undefined} value
 * @return {!proto.bottle.inventory.v1.ListSkuAvailabilityResponse} returns this
*/
proto.bottle.inventory.v1.ListSkuAvailabilityResponse.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bottle.inventory.v1.ListSkuAvailabilityResponse} returns this
 */
proto.bottle.inventory.v1.ListSkuAvailabilityResponse.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bottle.inventory.v1.ListSkuAvailabilityResponse.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 available_quantity = 4;
 * @return {number}
 */
proto.bottle.inventory.v1.ListSkuAvailabilityResponse.prototype.getAvailableQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bottle.inventory.v1.ListSkuAvailabilityResponse} returns this
 */
proto.bottle.inventory.v1.ListSkuAvailabilityResponse.prototype.setAvailableQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bottle.inventory.v1.ListLocationsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bottle.inventory.v1.ListLocationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bottle.inventory.v1.ListLocationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bottle.inventory.v1.ListLocationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.inventory.v1.ListLocationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    locationsList: jspb.Message.toObjectList(msg.getLocationsList(),
    bottle_inventory_v1_location_pb.Location.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bottle.inventory.v1.ListLocationsRequest}
 */
proto.bottle.inventory.v1.ListLocationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bottle.inventory.v1.ListLocationsRequest;
  return proto.bottle.inventory.v1.ListLocationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bottle.inventory.v1.ListLocationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bottle.inventory.v1.ListLocationsRequest}
 */
proto.bottle.inventory.v1.ListLocationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new bottle_inventory_v1_location_pb.Location;
      reader.readMessage(value,bottle_inventory_v1_location_pb.Location.deserializeBinaryFromReader);
      msg.addLocations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bottle.inventory.v1.ListLocationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bottle.inventory.v1.ListLocationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bottle.inventory.v1.ListLocationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.inventory.v1.ListLocationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      bottle_inventory_v1_location_pb.Location.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.bottle.inventory.v1.ListLocationsRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bottle.inventory.v1.ListLocationsRequest} returns this
 */
proto.bottle.inventory.v1.ListLocationsRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Location locations = 2;
 * @return {!Array<!proto.bottle.inventory.v1.Location>}
 */
proto.bottle.inventory.v1.ListLocationsRequest.prototype.getLocationsList = function() {
  return /** @type{!Array<!proto.bottle.inventory.v1.Location>} */ (
    jspb.Message.getRepeatedWrapperField(this, bottle_inventory_v1_location_pb.Location, 2));
};


/**
 * @param {!Array<!proto.bottle.inventory.v1.Location>} value
 * @return {!proto.bottle.inventory.v1.ListLocationsRequest} returns this
*/
proto.bottle.inventory.v1.ListLocationsRequest.prototype.setLocationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.bottle.inventory.v1.Location=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bottle.inventory.v1.Location}
 */
proto.bottle.inventory.v1.ListLocationsRequest.prototype.addLocations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.bottle.inventory.v1.Location, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bottle.inventory.v1.ListLocationsRequest} returns this
 */
proto.bottle.inventory.v1.ListLocationsRequest.prototype.clearLocationsList = function() {
  return this.setLocationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bottle.inventory.v1.ListLocationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bottle.inventory.v1.ListLocationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bottle.inventory.v1.ListLocationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.inventory.v1.ListLocationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    location: (f = msg.getLocation()) && bottle_inventory_v1_location_pb.Location.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bottle.inventory.v1.ListLocationsResponse}
 */
proto.bottle.inventory.v1.ListLocationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bottle.inventory.v1.ListLocationsResponse;
  return proto.bottle.inventory.v1.ListLocationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bottle.inventory.v1.ListLocationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bottle.inventory.v1.ListLocationsResponse}
 */
proto.bottle.inventory.v1.ListLocationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new bottle_inventory_v1_location_pb.Location;
      reader.readMessage(value,bottle_inventory_v1_location_pb.Location.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bottle.inventory.v1.ListLocationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bottle.inventory.v1.ListLocationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bottle.inventory.v1.ListLocationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.inventory.v1.ListLocationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bottle_inventory_v1_location_pb.Location.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.bottle.inventory.v1.ListLocationsResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bottle.inventory.v1.ListLocationsResponse} returns this
 */
proto.bottle.inventory.v1.ListLocationsResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Location location = 2;
 * @return {?proto.bottle.inventory.v1.Location}
 */
proto.bottle.inventory.v1.ListLocationsResponse.prototype.getLocation = function() {
  return /** @type{?proto.bottle.inventory.v1.Location} */ (
    jspb.Message.getWrapperField(this, bottle_inventory_v1_location_pb.Location, 2));
};


/**
 * @param {?proto.bottle.inventory.v1.Location|undefined} value
 * @return {!proto.bottle.inventory.v1.ListLocationsResponse} returns this
*/
proto.bottle.inventory.v1.ListLocationsResponse.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bottle.inventory.v1.ListLocationsResponse} returns this
 */
proto.bottle.inventory.v1.ListLocationsResponse.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bottle.inventory.v1.ListLocationsResponse.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.bottle.inventory.v1);
