// source: bottle/assembly/v1/build.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var bottle_inventory_v1_component_pb = require('../../../bottle/inventory/v1/component_pb.js');
goog.object.extend(proto, bottle_inventory_v1_component_pb);
var bottle_fulfillment_v1_order_pb = require('../../../bottle/fulfillment/v1/order_pb.js');
goog.object.extend(proto, bottle_fulfillment_v1_order_pb);
goog.exportSymbol('proto.bottle.assembly.v1.Build', null, global);
goog.exportSymbol('proto.bottle.assembly.v1.Build.BuildComponent', null, global);
goog.exportSymbol('proto.bottle.assembly.v1.Build.BuildStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bottle.assembly.v1.Build = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bottle.assembly.v1.Build.repeatedFields_, null);
};
goog.inherits(proto.bottle.assembly.v1.Build, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bottle.assembly.v1.Build.displayName = 'proto.bottle.assembly.v1.Build';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bottle.assembly.v1.Build.BuildComponent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bottle.assembly.v1.Build.BuildComponent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bottle.assembly.v1.Build.BuildComponent.displayName = 'proto.bottle.assembly.v1.Build.BuildComponent';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bottle.assembly.v1.Build.repeatedFields_ = [3,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bottle.assembly.v1.Build.prototype.toObject = function(opt_includeInstance) {
  return proto.bottle.assembly.v1.Build.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bottle.assembly.v1.Build} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.assembly.v1.Build.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    buildComponentsList: jspb.Message.toObjectList(msg.getBuildComponentsList(),
    proto.bottle.assembly.v1.Build.BuildComponent.toObject, includeInstance),
    missingComponentsList: jspb.Message.toObjectList(msg.getMissingComponentsList(),
    proto.bottle.assembly.v1.Build.BuildComponent.toObject, includeInstance),
    model: jspb.Message.getFieldWithDefault(msg, 4, ""),
    order: (f = msg.getOrder()) && bottle_fulfillment_v1_order_pb.Order.toObject(includeInstance, f),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bottle.assembly.v1.Build}
 */
proto.bottle.assembly.v1.Build.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bottle.assembly.v1.Build;
  return proto.bottle.assembly.v1.Build.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bottle.assembly.v1.Build} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bottle.assembly.v1.Build}
 */
proto.bottle.assembly.v1.Build.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.bottle.assembly.v1.Build.BuildStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = new proto.bottle.assembly.v1.Build.BuildComponent;
      reader.readMessage(value,proto.bottle.assembly.v1.Build.BuildComponent.deserializeBinaryFromReader);
      msg.addBuildComponents(value);
      break;
    case 8:
      var value = new proto.bottle.assembly.v1.Build.BuildComponent;
      reader.readMessage(value,proto.bottle.assembly.v1.Build.BuildComponent.deserializeBinaryFromReader);
      msg.addMissingComponents(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 5:
      var value = new bottle_fulfillment_v1_order_pb.Order;
      reader.readMessage(value,bottle_fulfillment_v1_order_pb.Order.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bottle.assembly.v1.Build.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bottle.assembly.v1.Build.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bottle.assembly.v1.Build} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.assembly.v1.Build.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getBuildComponentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.bottle.assembly.v1.Build.BuildComponent.serializeBinaryToWriter
    );
  }
  f = message.getMissingComponentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.bottle.assembly.v1.Build.BuildComponent.serializeBinaryToWriter
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      bottle_fulfillment_v1_order_pb.Order.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bottle.assembly.v1.Build.BuildStatus = {
  BUILD_STATUS_UNSPECIFIED: 0,
  BUILD_STATUS_INCOMPLETE: 1,
  BUILD_STATUS_READY: 2,
  BUILD_STATUS_BUILT: 3,
  BUILD_STATUS_INPROGRESS: 4
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bottle.assembly.v1.Build.BuildComponent.prototype.toObject = function(opt_includeInstance) {
  return proto.bottle.assembly.v1.Build.BuildComponent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bottle.assembly.v1.Build.BuildComponent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.assembly.v1.Build.BuildComponent.toObject = function(includeInstance, msg) {
  var f, obj = {
    component: (f = msg.getComponent()) && bottle_inventory_v1_component_pb.Component.toObject(includeInstance, f),
    quantity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bottle.assembly.v1.Build.BuildComponent}
 */
proto.bottle.assembly.v1.Build.BuildComponent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bottle.assembly.v1.Build.BuildComponent;
  return proto.bottle.assembly.v1.Build.BuildComponent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bottle.assembly.v1.Build.BuildComponent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bottle.assembly.v1.Build.BuildComponent}
 */
proto.bottle.assembly.v1.Build.BuildComponent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bottle_inventory_v1_component_pb.Component;
      reader.readMessage(value,bottle_inventory_v1_component_pb.Component.deserializeBinaryFromReader);
      msg.setComponent(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bottle.assembly.v1.Build.BuildComponent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bottle.assembly.v1.Build.BuildComponent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bottle.assembly.v1.Build.BuildComponent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.assembly.v1.Build.BuildComponent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getComponent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bottle_inventory_v1_component_pb.Component.serializeBinaryToWriter
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional bottle.inventory.v1.Component component = 1;
 * @return {?proto.bottle.inventory.v1.Component}
 */
proto.bottle.assembly.v1.Build.BuildComponent.prototype.getComponent = function() {
  return /** @type{?proto.bottle.inventory.v1.Component} */ (
    jspb.Message.getWrapperField(this, bottle_inventory_v1_component_pb.Component, 1));
};


/**
 * @param {?proto.bottle.inventory.v1.Component|undefined} value
 * @return {!proto.bottle.assembly.v1.Build.BuildComponent} returns this
*/
proto.bottle.assembly.v1.Build.BuildComponent.prototype.setComponent = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bottle.assembly.v1.Build.BuildComponent} returns this
 */
proto.bottle.assembly.v1.Build.BuildComponent.prototype.clearComponent = function() {
  return this.setComponent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bottle.assembly.v1.Build.BuildComponent.prototype.hasComponent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 quantity = 2;
 * @return {number}
 */
proto.bottle.assembly.v1.Build.BuildComponent.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bottle.assembly.v1.Build.BuildComponent} returns this
 */
proto.bottle.assembly.v1.Build.BuildComponent.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.bottle.assembly.v1.Build.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bottle.assembly.v1.Build} returns this
 */
proto.bottle.assembly.v1.Build.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional BuildStatus status = 2;
 * @return {!proto.bottle.assembly.v1.Build.BuildStatus}
 */
proto.bottle.assembly.v1.Build.prototype.getStatus = function() {
  return /** @type {!proto.bottle.assembly.v1.Build.BuildStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bottle.assembly.v1.Build.BuildStatus} value
 * @return {!proto.bottle.assembly.v1.Build} returns this
 */
proto.bottle.assembly.v1.Build.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated BuildComponent build_components = 3;
 * @return {!Array<!proto.bottle.assembly.v1.Build.BuildComponent>}
 */
proto.bottle.assembly.v1.Build.prototype.getBuildComponentsList = function() {
  return /** @type{!Array<!proto.bottle.assembly.v1.Build.BuildComponent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bottle.assembly.v1.Build.BuildComponent, 3));
};


/**
 * @param {!Array<!proto.bottle.assembly.v1.Build.BuildComponent>} value
 * @return {!proto.bottle.assembly.v1.Build} returns this
*/
proto.bottle.assembly.v1.Build.prototype.setBuildComponentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.bottle.assembly.v1.Build.BuildComponent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bottle.assembly.v1.Build.BuildComponent}
 */
proto.bottle.assembly.v1.Build.prototype.addBuildComponents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.bottle.assembly.v1.Build.BuildComponent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bottle.assembly.v1.Build} returns this
 */
proto.bottle.assembly.v1.Build.prototype.clearBuildComponentsList = function() {
  return this.setBuildComponentsList([]);
};


/**
 * repeated BuildComponent missing_components = 8;
 * @return {!Array<!proto.bottle.assembly.v1.Build.BuildComponent>}
 */
proto.bottle.assembly.v1.Build.prototype.getMissingComponentsList = function() {
  return /** @type{!Array<!proto.bottle.assembly.v1.Build.BuildComponent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bottle.assembly.v1.Build.BuildComponent, 8));
};


/**
 * @param {!Array<!proto.bottle.assembly.v1.Build.BuildComponent>} value
 * @return {!proto.bottle.assembly.v1.Build} returns this
*/
proto.bottle.assembly.v1.Build.prototype.setMissingComponentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.bottle.assembly.v1.Build.BuildComponent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bottle.assembly.v1.Build.BuildComponent}
 */
proto.bottle.assembly.v1.Build.prototype.addMissingComponents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.bottle.assembly.v1.Build.BuildComponent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bottle.assembly.v1.Build} returns this
 */
proto.bottle.assembly.v1.Build.prototype.clearMissingComponentsList = function() {
  return this.setMissingComponentsList([]);
};


/**
 * optional string model = 4;
 * @return {string}
 */
proto.bottle.assembly.v1.Build.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.bottle.assembly.v1.Build} returns this
 */
proto.bottle.assembly.v1.Build.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bottle.fulfillment.v1.Order order = 5;
 * @return {?proto.bottle.fulfillment.v1.Order}
 */
proto.bottle.assembly.v1.Build.prototype.getOrder = function() {
  return /** @type{?proto.bottle.fulfillment.v1.Order} */ (
    jspb.Message.getWrapperField(this, bottle_fulfillment_v1_order_pb.Order, 5));
};


/**
 * @param {?proto.bottle.fulfillment.v1.Order|undefined} value
 * @return {!proto.bottle.assembly.v1.Build} returns this
*/
proto.bottle.assembly.v1.Build.prototype.setOrder = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bottle.assembly.v1.Build} returns this
 */
proto.bottle.assembly.v1.Build.prototype.clearOrder = function() {
  return this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bottle.assembly.v1.Build.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.bottle.assembly.v1.Build.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.bottle.assembly.v1.Build} returns this
 */
proto.bottle.assembly.v1.Build.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.bottle.assembly.v1.Build.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.bottle.assembly.v1.Build} returns this
 */
proto.bottle.assembly.v1.Build.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


goog.object.extend(exports, proto.bottle.assembly.v1);
