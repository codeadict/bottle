// source: bottle/fulfillment/v1/order.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var bottle_account_v1_address_pb = require('../../../bottle/account/v1/address_pb.js');
goog.object.extend(proto, bottle_account_v1_address_pb);
var bottle_account_v1_user_pb = require('../../../bottle/account/v1/user_pb.js');
goog.object.extend(proto, bottle_account_v1_user_pb);
var bottle_catalog_v1_product_pb = require('../../../bottle/catalog/v1/product_pb.js');
goog.object.extend(proto, bottle_catalog_v1_product_pb);
var bottle_fulfillment_v1_event_pb = require('../../../bottle/fulfillment/v1/event_pb.js');
goog.object.extend(proto, bottle_fulfillment_v1_event_pb);
var bottle_fulfillment_v1_line_item_pb = require('../../../bottle/fulfillment/v1/line_item_pb.js');
goog.object.extend(proto, bottle_fulfillment_v1_line_item_pb);
var bottle_fulfillment_v1_tax_line_pb = require('../../../bottle/fulfillment/v1/tax_line_pb.js');
goog.object.extend(proto, bottle_fulfillment_v1_tax_line_pb);
goog.exportSymbol('proto.bottle.fulfillment.v1.Order', null, global);
goog.exportSymbol('proto.bottle.fulfillment.v1.Order.PaymentMethod', null, global);
goog.exportSymbol('proto.bottle.fulfillment.v1.Order.Status', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bottle.fulfillment.v1.Order = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bottle.fulfillment.v1.Order.repeatedFields_, null);
};
goog.inherits(proto.bottle.fulfillment.v1.Order, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bottle.fulfillment.v1.Order.displayName = 'proto.bottle.fulfillment.v1.Order';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bottle.fulfillment.v1.Order.repeatedFields_ = [11,10,14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bottle.fulfillment.v1.Order.prototype.toObject = function(opt_includeInstance) {
  return proto.bottle.fulfillment.v1.Order.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bottle.fulfillment.v1.Order} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.fulfillment.v1.Order.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 13, 0),
    customer: (f = msg.getCustomer()) && bottle_account_v1_user_pb.User.toObject(includeInstance, f),
    shipping: (f = msg.getShipping()) && bottle_account_v1_address_pb.Address.toObject(includeInstance, f),
    billing: (f = msg.getBilling()) && bottle_account_v1_address_pb.Address.toObject(includeInstance, f),
    lineItemsList: jspb.Message.toObjectList(msg.getLineItemsList(),
    bottle_fulfillment_v1_line_item_pb.LineItem.toObject, includeInstance),
    shippingMethod: jspb.Message.getFieldWithDefault(msg, 5, ""),
    shippingPrice: jspb.Message.getFieldWithDefault(msg, 12, 0),
    paymentMethod: jspb.Message.getFieldWithDefault(msg, 7, 0),
    scode: jspb.Message.getFieldWithDefault(msg, 8, ""),
    taxLinesList: jspb.Message.toObjectList(msg.getTaxLinesList(),
    bottle_fulfillment_v1_tax_line_pb.TaxLine.toObject, includeInstance),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    bottle_fulfillment_v1_event_pb.Event.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bottle.fulfillment.v1.Order}
 */
proto.bottle.fulfillment.v1.Order.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bottle.fulfillment.v1.Order;
  return proto.bottle.fulfillment.v1.Order.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bottle.fulfillment.v1.Order} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bottle.fulfillment.v1.Order}
 */
proto.bottle.fulfillment.v1.Order.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 13:
      var value = /** @type {!proto.bottle.fulfillment.v1.Order.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = new bottle_account_v1_user_pb.User;
      reader.readMessage(value,bottle_account_v1_user_pb.User.deserializeBinaryFromReader);
      msg.setCustomer(value);
      break;
    case 3:
      var value = new bottle_account_v1_address_pb.Address;
      reader.readMessage(value,bottle_account_v1_address_pb.Address.deserializeBinaryFromReader);
      msg.setShipping(value);
      break;
    case 4:
      var value = new bottle_account_v1_address_pb.Address;
      reader.readMessage(value,bottle_account_v1_address_pb.Address.deserializeBinaryFromReader);
      msg.setBilling(value);
      break;
    case 11:
      var value = new bottle_fulfillment_v1_line_item_pb.LineItem;
      reader.readMessage(value,bottle_fulfillment_v1_line_item_pb.LineItem.deserializeBinaryFromReader);
      msg.addLineItems(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setShippingMethod(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setShippingPrice(value);
      break;
    case 7:
      var value = /** @type {!proto.bottle.fulfillment.v1.Order.PaymentMethod} */ (reader.readEnum());
      msg.setPaymentMethod(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setScode(value);
      break;
    case 10:
      var value = new bottle_fulfillment_v1_tax_line_pb.TaxLine;
      reader.readMessage(value,bottle_fulfillment_v1_tax_line_pb.TaxLine.deserializeBinaryFromReader);
      msg.addTaxLines(value);
      break;
    case 14:
      var value = new bottle_fulfillment_v1_event_pb.Event;
      reader.readMessage(value,bottle_fulfillment_v1_event_pb.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bottle.fulfillment.v1.Order.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bottle.fulfillment.v1.Order.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bottle.fulfillment.v1.Order} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bottle.fulfillment.v1.Order.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getCustomer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bottle_account_v1_user_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getShipping();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      bottle_account_v1_address_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getBilling();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      bottle_account_v1_address_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getLineItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      bottle_fulfillment_v1_line_item_pb.LineItem.serializeBinaryToWriter
    );
  }
  f = message.getShippingMethod();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getShippingPrice();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getPaymentMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getScode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTaxLinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      bottle_fulfillment_v1_tax_line_pb.TaxLine.serializeBinaryToWriter
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      bottle_fulfillment_v1_event_pb.Event.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.bottle.fulfillment.v1.Order.Status = {
  STATUS_UNSPECIFIED: 0,
  STATUS_COMPLETE: 1
};

/**
 * @enum {number}
 */
proto.bottle.fulfillment.v1.Order.PaymentMethod = {
  PAYMENT_METHOD_UNSPECIFIED: 0,
  PAYMENT_METHOD_CHECK: 1,
  PAYMENT_METHOD_WIRE_TRANSFER: 2,
  PAYMENT_METHOD_MONEY_ORDER: 3,
  PAYMENT_METHOD_PURCHASE_ORDER: 4,
  PAYMENT_METHOD_WARRANTY: 5,
  PAYMENT_METHOD_ADVANCED_REPLACEMENT: 6,
  PAYMENT_METHOD_STRIPE_CC: 7,
  PAYMENT_METHOD_STRIPE_KLARNA: 8
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.bottle.fulfillment.v1.Order.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bottle.fulfillment.v1.Order} returns this
 */
proto.bottle.fulfillment.v1.Order.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 13;
 * @return {!proto.bottle.fulfillment.v1.Order.Status}
 */
proto.bottle.fulfillment.v1.Order.prototype.getStatus = function() {
  return /** @type {!proto.bottle.fulfillment.v1.Order.Status} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.bottle.fulfillment.v1.Order.Status} value
 * @return {!proto.bottle.fulfillment.v1.Order} returns this
 */
proto.bottle.fulfillment.v1.Order.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional bottle.account.v1.User customer = 2;
 * @return {?proto.bottle.account.v1.User}
 */
proto.bottle.fulfillment.v1.Order.prototype.getCustomer = function() {
  return /** @type{?proto.bottle.account.v1.User} */ (
    jspb.Message.getWrapperField(this, bottle_account_v1_user_pb.User, 2));
};


/**
 * @param {?proto.bottle.account.v1.User|undefined} value
 * @return {!proto.bottle.fulfillment.v1.Order} returns this
*/
proto.bottle.fulfillment.v1.Order.prototype.setCustomer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bottle.fulfillment.v1.Order} returns this
 */
proto.bottle.fulfillment.v1.Order.prototype.clearCustomer = function() {
  return this.setCustomer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bottle.fulfillment.v1.Order.prototype.hasCustomer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bottle.account.v1.Address shipping = 3;
 * @return {?proto.bottle.account.v1.Address}
 */
proto.bottle.fulfillment.v1.Order.prototype.getShipping = function() {
  return /** @type{?proto.bottle.account.v1.Address} */ (
    jspb.Message.getWrapperField(this, bottle_account_v1_address_pb.Address, 3));
};


/**
 * @param {?proto.bottle.account.v1.Address|undefined} value
 * @return {!proto.bottle.fulfillment.v1.Order} returns this
*/
proto.bottle.fulfillment.v1.Order.prototype.setShipping = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bottle.fulfillment.v1.Order} returns this
 */
proto.bottle.fulfillment.v1.Order.prototype.clearShipping = function() {
  return this.setShipping(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bottle.fulfillment.v1.Order.prototype.hasShipping = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bottle.account.v1.Address billing = 4;
 * @return {?proto.bottle.account.v1.Address}
 */
proto.bottle.fulfillment.v1.Order.prototype.getBilling = function() {
  return /** @type{?proto.bottle.account.v1.Address} */ (
    jspb.Message.getWrapperField(this, bottle_account_v1_address_pb.Address, 4));
};


/**
 * @param {?proto.bottle.account.v1.Address|undefined} value
 * @return {!proto.bottle.fulfillment.v1.Order} returns this
*/
proto.bottle.fulfillment.v1.Order.prototype.setBilling = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bottle.fulfillment.v1.Order} returns this
 */
proto.bottle.fulfillment.v1.Order.prototype.clearBilling = function() {
  return this.setBilling(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bottle.fulfillment.v1.Order.prototype.hasBilling = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated LineItem line_items = 11;
 * @return {!Array<!proto.bottle.fulfillment.v1.LineItem>}
 */
proto.bottle.fulfillment.v1.Order.prototype.getLineItemsList = function() {
  return /** @type{!Array<!proto.bottle.fulfillment.v1.LineItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, bottle_fulfillment_v1_line_item_pb.LineItem, 11));
};


/**
 * @param {!Array<!proto.bottle.fulfillment.v1.LineItem>} value
 * @return {!proto.bottle.fulfillment.v1.Order} returns this
*/
proto.bottle.fulfillment.v1.Order.prototype.setLineItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.bottle.fulfillment.v1.LineItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bottle.fulfillment.v1.LineItem}
 */
proto.bottle.fulfillment.v1.Order.prototype.addLineItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.bottle.fulfillment.v1.LineItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bottle.fulfillment.v1.Order} returns this
 */
proto.bottle.fulfillment.v1.Order.prototype.clearLineItemsList = function() {
  return this.setLineItemsList([]);
};


/**
 * optional string shipping_method = 5;
 * @return {string}
 */
proto.bottle.fulfillment.v1.Order.prototype.getShippingMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.bottle.fulfillment.v1.Order} returns this
 */
proto.bottle.fulfillment.v1.Order.prototype.setShippingMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 shipping_price = 12;
 * @return {number}
 */
proto.bottle.fulfillment.v1.Order.prototype.getShippingPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.bottle.fulfillment.v1.Order} returns this
 */
proto.bottle.fulfillment.v1.Order.prototype.setShippingPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional PaymentMethod payment_method = 7;
 * @return {!proto.bottle.fulfillment.v1.Order.PaymentMethod}
 */
proto.bottle.fulfillment.v1.Order.prototype.getPaymentMethod = function() {
  return /** @type {!proto.bottle.fulfillment.v1.Order.PaymentMethod} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.bottle.fulfillment.v1.Order.PaymentMethod} value
 * @return {!proto.bottle.fulfillment.v1.Order} returns this
 */
proto.bottle.fulfillment.v1.Order.prototype.setPaymentMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional string scode = 8;
 * @return {string}
 */
proto.bottle.fulfillment.v1.Order.prototype.getScode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.bottle.fulfillment.v1.Order} returns this
 */
proto.bottle.fulfillment.v1.Order.prototype.setScode = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated TaxLine tax_lines = 10;
 * @return {!Array<!proto.bottle.fulfillment.v1.TaxLine>}
 */
proto.bottle.fulfillment.v1.Order.prototype.getTaxLinesList = function() {
  return /** @type{!Array<!proto.bottle.fulfillment.v1.TaxLine>} */ (
    jspb.Message.getRepeatedWrapperField(this, bottle_fulfillment_v1_tax_line_pb.TaxLine, 10));
};


/**
 * @param {!Array<!proto.bottle.fulfillment.v1.TaxLine>} value
 * @return {!proto.bottle.fulfillment.v1.Order} returns this
*/
proto.bottle.fulfillment.v1.Order.prototype.setTaxLinesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.bottle.fulfillment.v1.TaxLine=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bottle.fulfillment.v1.TaxLine}
 */
proto.bottle.fulfillment.v1.Order.prototype.addTaxLines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.bottle.fulfillment.v1.TaxLine, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bottle.fulfillment.v1.Order} returns this
 */
proto.bottle.fulfillment.v1.Order.prototype.clearTaxLinesList = function() {
  return this.setTaxLinesList([]);
};


/**
 * repeated Event events = 14;
 * @return {!Array<!proto.bottle.fulfillment.v1.Event>}
 */
proto.bottle.fulfillment.v1.Order.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.bottle.fulfillment.v1.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, bottle_fulfillment_v1_event_pb.Event, 14));
};


/**
 * @param {!Array<!proto.bottle.fulfillment.v1.Event>} value
 * @return {!proto.bottle.fulfillment.v1.Order} returns this
*/
proto.bottle.fulfillment.v1.Order.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.bottle.fulfillment.v1.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bottle.fulfillment.v1.Event}
 */
proto.bottle.fulfillment.v1.Order.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.bottle.fulfillment.v1.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bottle.fulfillment.v1.Order} returns this
 */
proto.bottle.fulfillment.v1.Order.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};


goog.object.extend(exports, proto.bottle.fulfillment.v1);
